<h1>Fill in parameters</h1>
<%= @menu %>
<h2><%= @rpt.caption %></h2>

<form action='<%= @report_action %>' method=post class="pure-form pure-form-aligned">
  <div class="pure-g">
    <div class="pure-u-1">
      <div class="field pure-control-group">
        <label for="limit">Limit</label>
        <input id="limit" type="number" name='limit' min="1" value="<%= @rpt.limit %>" />
      </div>
      <div class="actions pure-controls">
        <button type='submit' id="run_excel" name="submit" formaction="<%= @excel_action %>" data-disable-with="Create Excel report" class="pure-button pure-button"><i class="fa fa-file-excel-o"></i> Download Excel report</button>
        <input type="submit" name="submit" value="Run report" data-disable-with="Run report" class="pure-button pure-button-primary">
      </div>
      <hr>
      <h2>Test new param-gathering</h2>
            <select id="select_param">
              <option value=""></option>
              <%= make_options(@qps.map { |qp| [qp.caption, qp.column] }) %>
            </select>
            <div id="qp_form" style="display:inline-block"></div>
            <div id="param_display"></div>
      <hr>
      <% @qps.each do |query_param| %>
        <div class="field pure-control-group">
          <label class="label"><%=query_param.caption %></label>
          <select name="queryparam[<%=query_param.column %>][operator]">
            <% if query_param.control_type == :list %>
              <%= make_options(@ops_sel_ar)%>
            <% elsif query_param.control_type == :date %>
              <%= make_options(@ops_date_ar)%>
            <% else %>
              <%= make_options(@ops_ar)%>
            <% end %>
          </select>
          <% if query_param.control_type == :list %>
            <select name="queryparam[<%=query_param.column %>][value]">
              <option value=""></option>
              <% if query_param.includes_list_options? %>
                <%= make_options(query_param.build_list.list_values) %>
              <% else %>
                <%= make_options(query_param.build_list {|sql| DB[sql].all.map {|r| r.values } }.list_values) %>
              <% end %>
            </select>
          <% elsif query_param.control_type == :date %>
            <input type="date" name="queryparam[<%=query_param.column %>][from_value]" value="<%=query_param.default_value %>" />
            and
            <input type="date" name="queryparam[<%=query_param.column %>][to_value]" value="<%=query_param.default_value %>" />
          <% else %>
            <input type="text" name="queryparam[<%=query_param.column %>][value]" value="<%=query_param.default_value %>" />
          <% end %>
        </div>

      <% end %>
    </div>
  </div>
</form>
  <script>
    var queryItemAsText = function(item) {
      return '<li>[X] ' + item.caption + ' ' + item.opText + ' ' + item.text;
    };
    var querySelectionAsText = function(param_values) {
      if(param_values.length === 0) {
        return '<li>No parameters selected</li>';
      }
      else {
        var items = [];
        for(var i=0;i<param_values.length;i++) {
          items.push(queryItemAsText(param_values[i]));
        }
        return items.join('');
      }
    };
  var runReport = function() {
    var http     = new XMLHttpRequest();
    var url      = '<%= @report_ajax_action %>';
    //var formData = JSON.stringify(current_values);
    var formData = new FormData();
    formData.append('param_array', JSON.stringify(current_values));
    formData.append('limit', document.getElementById('limit').value);

    //http.responseType = 'json'
    http.open("POST", url, true);

    http.onreadystatechange = function() {//Call a function when the state changes.
      if(http.readyState == 4 && http.status == 200) {
        window.open(); document.write(http.responseText)
        // var resp = http.response;
        // console.log('status', resp.status, 'message', resp.message);
      }
    }
    http.send(formData);
  };

  var query_params = <%= make_query_param_json(@qps) %>;
  var current_values = [];
  var makeSelect = function(name, arr) {
    var sel = '<select id="' + name + '" name="' + name + '">';
    console.log(arr[0]);
    for(var i=0;i<arr.length;i++) {
      if(arr[i].constructor === Array) {
        sel += '<option value="' + (arr[i][1] || arr[i][0]) + '">' + arr[i][0] + '</option>';
      }
      else {
        sel += '<option value="' + arr[i] + '">' + arr[i] + '</option>';
      }
    }
    sel += '</select>';
    return sel;
  };
  var displayParamsAsText = function() {
    var disp = '<h3>Parameters</h3><ul>';
    disp += querySelectionAsText(current_values);
    disp += '</ul>';
    disp += '<button type="button" class="pure-button pure-button" onclick="runReport()"><i class="fa fa-play"></i> Run</button> ... xls as well'
    document.getElementById('param_display').innerHTML = disp;
  };

  var addQpFormParam = function() {
    var choice = {};
    var valElem = document.getElementById('qp_value'); // And 2nd val if between...
    choice.col  = document.getElementById('qp_column').value;
    choice.op   = document.getElementById('qp_operator').value;
    choice.opText = document.getElementById('qp_operator').options[document.getElementById('qp_operator').selectedIndex].text;
    choice.val  = valElem.value;
    var qp = query_params[choice.col];
    if(qp.control_type === 'list') {
      choice.text = valElem.options[valElem.selectedIndex].text;
    }
    else {
      choice.text = choice.val;
    }
    choice.caption  = qp.caption;
    // TODO: VALIDATE... (only add once, between needs 2 vals, val not blank etc.
    console.log(choice);
    current_values.push(choice);
    displayParamsAsText();
  };

  (function() {

    document.getElementById("select_param").addEventListener('change', function (event) {
      var val = event.target.value, qp, val_input;
      var qpForm = document.getElementById("qp_form");
      // Form should maybe popup?
      if(val ==='') {
        qpForm.innerHTML = '';
      }
      else {
        qp = query_params[val];
        console.log('SHOW', val);
        //qpForm.innerHTML = 'SHOW ' + val; // Build form from rules in query_params....
        if(qp.control_type === 'list') {
          val_input = makeSelect('qp_value', qp.list_values);
        }
        else {
          val_input = '<input name="qp_value" id="qp_value" value="'+ (qp.default_value === null ? '' : qp.default_value) +'" />'
        }
        qpForm.innerHTML = '<form id="dForm" action="#">' + '<input type="hidden" id="qp_column" value="' + qp.column + '" />' +
          //'<label>' + qp.caption + '</label>' +
          makeSelect('qp_operator', qp.operator) +
          //val_input +'<button type="button" onclick="console.log(new FormData(document.getElementById(\'qp_form\')))"><i class="fa fa-plus"></i></button></form>';
          val_input +'<button type="button" class="pure-button pure-button" onclick="addQpFormParam()"><i class="fa fa-plus"></i></button></form>';
      }
            // event.stopPropagation();
            // event.preventDefault();
    });

    displayParamsAsText();

  }).call(this);

// var current_values (for use in re-submit)
// var text_representation -- current_values passed through function.
// 1) Listen for change of select_param.
// 2) On change, build form for choosing value & bring in existing choice for change.
// 3) On submit, add to json list of values and build up text representation of values.
</script>
